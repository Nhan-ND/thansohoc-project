:root {
    --primary-color: #f0f0f0; /* Xám nhạt - Chữ tiêu đề, tiêu đề section */
    --primary-light: #d0d0d0; /* Xám nhạt vừa - Chữ phụ, label input */
    --secondary-color: #64b5f6; /* Xanh da trời nhạt - Button chính hover */
    --accent-color: #ffca28; /* Vàng cam - Điểm nhấn, button chính */
    --text-color: #e0e0e0; /* Trắng xám - Chữ chung, placeholder */
    --light-text: #fff; /* Trắng - Chữ nổi bật */
    --card-bg: rgba(255, 255, 255, 0.08); /* Nền card - trong suốt, hơi trắng */
    --card-border: rgba(255, 255, 255, 0.1); /* Viền card - trong suốt, hơi trắng */
    --life-path-bg: linear-gradient(135deg, #6a1b9a, #4527a0); /* Tím đậm - Đường đời */
    --destiny-bg: linear-gradient(135deg, #3949ab, #283593); /* Xanh indigo - Sứ mệnh */
    --soul-bg: linear-gradient(135deg, #303f9f, #1a237e); /* Xanh tím - Linh hồn */
    --personality-bg: linear-gradient(135deg, #3949ab, #283593); /* Xanh indigo - Nhân cách */
    --minor-bg: linear-gradient(135deg, #303f9f, #1a237e); /* Xanh tím - Chỉ số phụ */
    --main-bg: #0d1117; /* Đen - Nền chính body */
}

/* Reset CSS và global styles */
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    font-family: 'Quicksand', sans-serif;
    scroll-behavior: smooth;
}

body {
    background-color: var(--main-bg);
    min-height: 100vh;
    display: flex;
    flex-direction: column; /* Thay đổi thành column để footer ở dưới cùng */
    justify-content: flex-start; /* Bắt đầu nội dung từ trên xuống */
    align-items: center;
    padding: 20px;
    color: var(--text-color);
    position: relative;
    overflow-x: hidden;
}

body::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    opacity: 0.7; /* Tăng opacity hình nền */
    z-index: -2; /* Đặt z-index thấp hơn cả stars và container */
    background-image: url('https://images.unsplash.com/photo-1505877036890-9c0847384d0e?q=80&w=2070&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D'); /* Hình nền vũ trụ khác */
    background-size: cover;
    background-position: center;
    filter: brightness(0.8) contrast(1.2); /* Chỉnh độ sáng và tương phản hình nền */
}

.stars {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    pointer-events: none;
    z-index: -1; /* Đặt z-index thấp hơn container */
    background: transparent;
}

.star {
    position: absolute;
    background-color: var(--primary-light);
    border-radius: 50%;
    animation: twinkle 4s infinite;
    opacity: 0.6; /* Giảm opacity sao */
    box-shadow: 0 0 6px var(--primary-light); /* Tăng hiệu ứng glow sao */
}

@keyframes twinkle {
    0%, 100% {
        opacity: 0.4; /* Sao mờ hơn */
    }
    50% {
        opacity: 0.9; /* Sao sáng hơn ở giữa chu kỳ */
    }
}

.container {
    width: 100%;
    max-width: 900px;
    background-color: rgba(255, 255, 255, 0.03); /* Nền container trong suốt hơn nữa */
    backdrop-filter: blur(30px); /* Tăng blur container */
    border-radius: 20px;
    box-shadow: 0 20px 40px rgba(0, 0, 0, 0.5), /* Bóng đổ mạnh hơn */
        0 0 0 1px rgba(255, 255, 255, 0.1); /* Viền trắng mỏng */
    overflow: hidden;
    padding: 40px; /* Tăng padding container */
    margin-top: 40px; /* Thêm margin top cho container */
    animation: fadeIn 1s ease-out; /* Thay đổi animation */
    position: relative;
    z-index: 1;
}

.container::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-image: url("data:image/svg+xml,%3Csvg width='80' height='80' viewBox='0 0 80 80' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M40 40 L80 0 L0 0 Z' fill='rgba(255, 255, 255, 0.02)'/%3E%3Cpath d='M40 40 L0 80 L80 80 Z' fill='rgba(255, 255, 255, 0.02)'/%3E%3Cpath d='M40 40 L0 0 L0 60 Z' fill='rgba(255, 255, 255, 0.02)'/%3E%3Cpath d='M40 40 L60 60 L60 0 Z' fill='rgba(255, 255, 255, 0.02)'/%3E%3C/svg%3E");
    opacity: 0.6; /* Tăng opacity pattern container */
    z-index: -1;
}

@keyframes fadeIn {
    from {
        opacity: 0;
        transform: translateY(30px); /* Dịch chuyển lên nhiều hơn */
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

.header {
    text-align: center;
    margin-bottom: 40px; /* Tăng margin bottom header */
    position: relative;
}

.header::after {
    content: '';
    display: block;
    width: 100px; /* Tăng chiều rộng gạch ngang header */
    height: 4px; /* Tăng độ dày gạch ngang header */
    background: linear-gradient(90deg, transparent, var(--accent-color), transparent);
    margin: 20px auto 0; /* Tăng margin top gạch ngang header */
}

.header h1 {
    color: var(--primary-color);
    font-size: 3rem; /* Tăng font size tiêu đề */
    margin-bottom: 15px; /* Tăng margin bottom tiêu đề */
    font-weight: 700;
    font-family: 'Philosopher', serif;
    letter-spacing: 2px; /* Tăng letter spacing tiêu đề */
    text-shadow: 0 3px 15px rgba(0, 0, 0, 0.5); /* Bóng đổ đậm hơn cho tiêu đề */
}

.header p {
    color: var(--primary-light); /* Đổi màu chữ mô tả header */
    font-size: 1.1rem; /* Tăng font size mô tả header */
    opacity: 0.9; /* Tăng opacity mô tả header */
}

.input-section {
    display: flex;
    flex-wrap: wrap;
    gap: 25px; /* Tăng gap input section */
    margin-bottom: 40px; /* Tăng margin bottom input section */
    background-color: rgba(255, 255, 255, 0.05); /* Nền input section trong suốt hơn */
    padding: 30px; /* Tăng padding input section */
    border-radius: 20px; /* Bo tròn input section */
    border: 1px solid var(--card-border);
    align-items: flex-start; /* Căn chỉnh input group lên trên */
}

.input-group {
    flex: 1;
    min-width: 250px; /* Tăng min-width input group */
}

.input-group label {
    display: block;
    margin-bottom: 10px; /* Tăng margin bottom label */
    font-weight: 600;
    color: var(--primary-light); /* Đổi màu label */
    font-size: 1.1rem; /* Tăng font size label */
}

.input-group input {
    width: 100%;
    padding: 15px 20px; /* Tăng padding input */
    background-color: rgba(255, 255, 255, 0.1); /* Nền input trong suốt hơn */
    border: 1px solid var(--card-border);
    border-radius: 12px; /* Bo tròn input */
    font-size: 1.1rem; /* Tăng font size input */
    transition: all 0.3s ease;
    color: var(--text-color);
}

.input-group input::placeholder {
    color: var(--text-color); /* Đổi màu placeholder */
    opacity: 0.7; /* Giảm opacity placeholder */
}

.input-group input:focus {
    outline: none;
    border-color: var(--accent-color);
    box-shadow: 0 0 0 4px rgba(255, 202, 40, 0.3); /* Box shadow lớn hơn khi focus */
}

.button-group {
    width: auto; /* Điều chỉnh width về auto để button group co lại vừa đủ nội dung */
    display: flex;
    justify-content: flex-start; /* Căn button về bên trái trong button group */
    gap: 10px; /* Giảm gap button group trên desktop */
    margin-top: 0; /* Loại bỏ margin top button group trên desktop */
    margin-left: 10px; /* Thêm margin left để căn chỉnh button bên phải input */
}

.run-btn, .refresh-btn {
    background: linear-gradient(135deg, var(--accent-color), #e6a93b);
    color: var(--text-color); /* Đổi màu chữ button */
    border: none;
    border-radius: 10px; /* Bo tròn button */
    padding: 12px 25px; /* Giảm padding button trên desktop */
    font-size: 1rem; /* Giảm font size button trên desktop */
    font-weight: 600;
    cursor: pointer;
    transition: all 0.3s ease;
    box-shadow: 0 4px 15px rgba(255, 202, 40, 0.3); /* Bóng đổ button */
    text-shadow: 0 1px 3px rgba(0, 0, 0, 0.5); /* Bóng đổ chữ button */
    min-width: auto; /* Min width auto button desktop */
    width: auto; /* Width auto button desktop */
    display: inline-block; /* Hiển thị inline-block để button nằm trên cùng hàng với input */
    margin-left: 0; /* Loại bỏ margin left button desktop */
    margin-right: 0; /* Loại bỏ margin right button desktop */
}

.run-btn:hover {
    transform: translateY(-2px);
    background: linear-gradient(135deg, var(--secondary-color), #64b5f6);
    box-shadow: 0 6px 20px rgba(100, 181, 246, 0.4);
    color: var(--light-text);
}

.refresh-btn {
    background: rgba(255, 255, 255, 0.05); /* Nền refresh button trong suốt */
    border: 1px solid var(--card-border); /* Viền refresh button */
    color: var(--text-color); /* Màu chữ refresh button */
    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1); /* Bóng đổ nhẹ refresh button */
    text-shadow: none; /* Loại bỏ bóng đổ chữ refresh button */
}

.refresh-btn:hover {
    transform: translateY(-2px);
    background-color: rgba(255, 255, 255, 0.1); /* Nền refresh button sáng hơn khi hover */
    box-shadow: 0 6px 15px rgba(0, 0, 0, 0.2); /* Bóng đổ hover refresh button */
    color: var(--light-text); /* Đổi màu chữ hover refresh button */
    border-color: var(--secondary-color); /* Đổi màu viền hover refresh button */
}

.results-container {
    display: flex;
    flex-direction: column;
    gap: 25px; /* Tăng gap results container */
    margin-bottom: 40px; /* Tăng margin bottom results container */
}

.results-container.hidden {
    display: none;
}

.section-title {
    font-family: 'Philosopher', serif;
    color: var(--primary-color);
    margin-bottom: 15px; /* Tăng margin bottom section title */
    font-size: 1.5rem; /* Tăng font size section title */
    font-weight: 600;
    text-shadow: 0 2px 8px rgba(0, 0, 0, 0.4); /* Bóng đổ section title */
    text-align: center; /* Căn giữa section title */
}

/* Life Path Section */
.life-path-section {
    background: var(--life-path-bg);
    border-radius: 20px; /* Bo tròn life path section */
    padding: 30px; /* Tăng padding life path section */
    text-align: center;
    box-shadow: 0 8px 20px rgba(0, 0, 0, 0.3); /* Bóng đổ lớn hơn life path section */
    border: 1px solid var(--card-border);
    position: relative;
    overflow: hidden;
}

.life-path-section::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-image: url("data:image/svg+xml,%3Csvg width='120' height='120' viewBox='0 0 120 120' xmlns='http://www.w3.org/2000/svg'%3E%3Ccircle cx='60' cy='60' r='50' stroke='rgba(255, 255, 255, 0.1)' stroke-width='2' fill='none'/%3E%3Ccircle cx='60' cy='60' r='40' stroke='rgba(255, 255, 255, 0.1)' stroke-width='2' fill='none'/%3E%3Ccircle cx='60' cy='60' r='30' stroke='rgba(255, 255, 255, 0.1)' stroke-width='2' fill='none'/%3E%3C/svg%3E"); /* Pattern vòng tròn lớn hơn */
    opacity: 0.4; /* Giảm opacity pattern life path section */
    z-index: 0;
}

.life-path-title {
    font-size: 1.8rem; /* Tăng font size life path title */
    font-weight: 600;
    margin-bottom: 20px; /* Tăng margin bottom life path title */
    color: var(--light-text); /* Đổi màu life path title */
    position: relative;
    z-index: 1;
    font-family: 'Philosopher', serif;
    text-shadow: 0 2px 10px rgba(0, 0, 0, 0.6); /* Bóng đổ life path title */
}

.life-path-value {
    font-size: 5rem; /* Tăng font size life path value */
    font-weight: 700;
    color: var(--light-text); /* Đổi màu life path value */
    text-shadow: 0 0 15px rgba(255, 255, 255, 0.8); /* Bóng đổ mạnh hơn life path value */
    position: relative;
    z-index: 1;
}

/* Paired sections */
.paired-section {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr)); /* Minmax card paired section */
    gap: 25px; /* Tăng gap paired section */
}

@media (max-width: 768px) {
    .paired-section {
        grid-template-columns: 1fr;
    }
}

.result-card {
    background: var(--destiny-bg);
    border-radius: 20px; /* Bo tròn result card */
    padding: 25px; /* Tăng padding result card */
    text-align: center;
    box-shadow: 0 8px 20px rgba(0, 0, 0, 0.3); /* Bóng đổ lớn hơn result card */
    border: 1px solid var(--card-border);
    transition: all 0.3s ease;
    position: relative;
    overflow: hidden;
}

.result-card::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-image: url("data:image/svg+xml,%3Csvg width='80' height='80' viewBox='0 0 80 80' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M40 40m-35 0a35 35 0 1 0 70 0a35 35 0 1 0 -70 0' stroke='rgba(255, 255, 255, 0.1)' stroke-width='2' fill='none'/%3E%3C/svg%3E"); /* Pattern vòng tròn lớn hơn result card */
    opacity: 0.3;
    z-index: 0;
}

.result-card:hover {
    transform: translateY(-8px); /* Hiệu ứng hover mạnh hơn result card */
    box-shadow: 0 12px 25px rgba(0, 0, 0, 0.3); /* Bóng đổ hover lớn hơn result card */
}

.result-title {
    font-size: 1.3rem; /* Tăng font size result title */
    font-weight: 500;
    margin-bottom: 12px; /* Tăng margin bottom result title */
    color: var(--light-text); /* Đổi màu result title */
    position: relative;
    z-index: 1;
    font-family: 'Philosopher', serif;
    text-shadow: 0 2px 8px rgba(0, 0, 0, 0.5); /* Bóng đổ result title */
}

.result-value {
    font-size: 3rem; /* Tăng font size result value */
    font-weight: 700;
    color: var(--light-text); /* Đổi màu result value */
    text-shadow: 0 0 12px rgba(255, 255, 255, 0.8); /* Bóng đổ mạnh hơn result value */
}

/* Minor attributes section */
.minor-section {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(200px, 1fr)); /* Minmax card minor section */
    gap: 20px; /* Tăng gap minor section */
}

.minor-card {
    background: var(--minor-bg);
    border-radius: 15px; /* Bo tròn minor card */
    padding: 20px; /* Tăng padding minor card */
    text-align: center;
    box-shadow: 0 6px 15px rgba(0, 0, 0, 0.2); /* Bóng đổ lớn hơn minor card */
    border: 1px solid var(--card-border);
    transition: all 0.3s ease;
}

.minor-card:hover {
    transform: translateY(-3px); /* Hiệu ứng hover mạnh hơn minor card */
    box-shadow: 0 10px 20px rgba(0, 0, 0, 0.25); /* Bóng đổ hover lớn hơn minor card */
}

.minor-title {
    font-size: 1rem; /* Tăng font size minor title */
    font-weight: 500;
    margin-bottom: 8px; /* Tăng margin bottom minor title */
    color: var(--light-text); /* Đổi màu minor title */
    font-family: 'Philosopher', serif;
    text-shadow: 0 1px 5px rgba(0, 0, 0, 0.4); /* Bóng đổ minor title */
}

.minor-value {
    font-size: 2.5rem; /* Tăng font size minor value */
    font-weight: 700;
    color: var(--light-text); /* Đổi màu minor value */
    text-shadow: 0 0 10px rgba(255, 255, 255, 0.6); /* Bóng đổ mạnh hơn minor value */
}

.footer {
    text-align: center;
    margin-top: 50px; /* Tăng margin top footer */
    padding-bottom: 30px; /* Thêm padding bottom footer */
    color: var(--primary-light); /* Đổi màu chữ footer */
    font-size: 0.9rem;
    opacity: 0.8; /* Tăng opacity footer */
    border-top: 1px solid var(--card-border); /* Thêm border top footer */
    padding-top: 20px; /* Thêm padding top footer */
}

/* Style cho tiêu đề kết quả */
.results-header {
    text-align: center;
    margin-bottom: 30px;
}

.results-header h2 {
    color: var(--primary-color);
    font-size: 2rem;
    font-family: 'Philosopher', serif;
    text-shadow: 0 2px 10px rgba(0, 0, 0, 0.5);
}

/* Style cho thông tin đầu vào (Tên, Ngày sinh) */
.input-info {
    text-align: center;
    margin-bottom: 20px;
    color: var(--primary-light);
    font-style: italic;
    opacity: 0.8;
}

.input-info p {
    margin-bottom: 5px;
}

.new-lookup-button {
    text-align: center;
    margin-top: 30px;
}

/* Ẩn nút refresh cũ (nếu muốn) */
#refreshBtn {
    display: none !important; /* Ẩn hoàn toàn nút refresh cũ */
}


/* Responsive design */
@media (max-width: 992px) { /* Thêm breakpoint cho tablet (992px) */
    .container {
        max-width: 768px; /* Giảm max-width container cho tablet */
        padding: 35px; /* Giảm padding container tablet */
        margin-top: 30px; /* Giảm margin top container tablet */
    }

    .header h1 {
        font-size: 2.8rem; /* Giảm font size tiêu đề tablet */
    }

    .life-path-value {
        font-size: 4.5rem; /* Giảm font size life path value tablet */
    }

    .result-value {
        font-size: 2.3rem; /* Giảm font size result value tablet */
    }

    .minor-section {
        grid-template-columns: repeat(3, 1fr); /* 3 cột minor section trên tablet */
    }
}

@media (max-width: 768px) { /* Breakpoint cho mobile lớn (768px) */
    .container {
        max-width: 540px; /* Giảm max-width container cho mobile lớn */
        padding: 25px; /* Giảm padding container mobile lớn */
        margin-top: 20px; /* Giảm margin top container mobile lớn */
    }

    .header h1 {
        font-size: 2.5rem; /* Giảm font size tiêu đề mobile lớn */
    }

    .life-path-value {
        font-size: 4rem; /* Giảm font size life path value mobile lớn */
    }

    .result-value {
        font-size: 2.2rem; /* Giảm font size result value mobile lớn */
    }

    .minor-section {
        grid-template-columns: repeat(2, 1fr); /* 2 cột minor section trên mobile lớn */
    }
}

@media (max-width: 576px) { /* Breakpoint cho mobile vừa (576px) */
    body {
        padding: 10px; /* Giảm padding body mobile vừa */
    }

    .container {
        padding: 20px; /* Giảm padding container mobile vừa */
        margin-top: 10px; /* Giảm margin top container mobile vừa */
        border-radius: 15px; /* Giảm bo tròn container mobile vừa */
    }

    .header h1 {
        font-size: 2rem; /* Giảm font size tiêu đề mobile vừa */
        margin-bottom: 10px; /* Giảm margin bottom tiêu đề mobile vừa */
    }

    .header p {
        font-size: 1rem; /* Giảm font size mô tả header mobile vừa */
    }

    .input-section {
        flex-direction: column; /* Input section thành column trên mobile vừa */
        padding: 20px; /* Giảm padding input section mobile vừa */
        border-radius: 15px; /* Giảm bo tròn input section mobile vừa */
        gap: 15px; /* Giảm gap input section mobile vừa */
        margin-bottom: 30px; /* Giảm margin bottom input section mobile vừa */
    }

    .input-group {
        flex: 1 1 100%; /* Input group chiếm toàn bộ chiều rộng khả dụng */
        min-width: auto; /* Loại bỏ min-width để input group tự động co lại */
        margin-bottom: 10px; /* Thêm margin bottom giữa các input group */
    }

    .input-group:last-child {
        margin-bottom: 0; /* Loại bỏ margin bottom cho input group cuối cùng */
    }

    .input-group label {
        margin-bottom: 5px; /* Giảm margin bottom label mobile vừa */
        font-size: 1rem; /* Giảm font size label mobile vừa */
    }

    .input-group input {
        padding: 12px 15px; /* Giảm padding input mobile vừa */
        font-size: 1rem; /* Giảm font size input mobile vừa */
        border-radius: 10px; /* Giảm bo tròn input mobile vừa */
    }

    .button-group {
        flex-direction: column; /* Button group thành column mobile vừa */
        gap: 15px; /* Giảm gap button group mobile vừa */
        margin-top: 15px; /* Giảm margin top button group mobile vừa */
    }

    .run-btn, .refresh-btn {
        padding: 12px 25px; /* Giảm padding button mobile vừa */
        font-size: 1rem; /* Giảm font size button mobile vừa */
        border-radius: 10px; /* Giảm bo tròn button mobile vừa */
        min-width: auto; /* Min width auto button mobile vừa */
        width: 100%; /* Button full width mobile vừa */
        display: block; /* Đảm bảo button hiển thị dạng block để chiếm full width */
        margin-left: auto; /* Căn giữa button (kết hợp margin-right: auto;) */
        margin-right: auto; /* Căn giữa button (kết hợp margin-left: auto;) */
    }

    .results-container {
        gap: 20px; /* Giảm gap results container mobile vừa */
        margin-bottom: 30px; /* Giảm margin bottom results container mobile vừa */
    }

    .section-title {
        font-size: 1.3rem; /* Giảm font size section title mobile vừa */
        margin-bottom: 8px; /* Giảm margin bottom section title mobile vừa */
    }

    .life-path-value {
        font-size: 3.5rem; /* Giảm font size life path value mobile vừa */
    }

    .result-value {
        font-size: 2rem; /* Giảm font size result value mobile vừa */
    }

    .minor-section {
        grid-template-columns: 1fr; /* 1 cột minor section trên mobile vừa */
        gap: 15px; /* Giảm gap minor section mobile vừa */
    }

    .minor-card {
        padding: 15px; /* Giảm padding minor card mobile vừa */
        border-radius: 10px; /* Giảm bo tròn minor card mobile vừa */
    }

    .minor-title {
        font-size: 0.9rem; /* Giảm font size minor title mobile vừa */
        margin-bottom: 5px; /* Giảm margin bottom minor title mobile vừa */
    }

    .minor-value {
        font-size: 2rem; /* Giảm font size minor value mobile vừa */
    }

    .footer {
        margin-top: 30px; /* Giảm margin top footer mobile vừa */
        padding-bottom: 20px; /* Giảm padding bottom footer mobile vừa */
        font-size: 0.8rem; /* Giảm font size footer mobile vừa */
        padding-top: 15px; /* Giảm padding top footer mobile vừa */
    }
}


@media (max-width: 480px) { /* Breakpoint cho mobile nhỏ (480px) */
    .container {
        padding: 15px; /* Giảm padding container mobile nhỏ hơn */
        border-radius: 10px; /* Giảm bo tròn container mobile nhỏ hơn */
    }

    .header h1 {
        font-size: 1.8rem; /* Giảm font size tiêu đề mobile nhỏ hơn */
    }

    .header p {
        font-size: 0.9rem; /* Giảm font size mô tả header mobile nhỏ hơn */
    }

    .input-section {
        padding: 15px; /* Giảm padding input section mobile nhỏ hơn */
        border-radius: 10px; /* Giảm bo tròn input section mobile nhỏ hơn */
        gap: 10px; /* Giảm gap input section mobile nhỏ hơn */
        margin-bottom: 20px; /* Giảm margin bottom input section mobile nhỏ hơn */
    }

    .input-group {
        flex: 1 1 100%; /* Input group chiếm toàn bộ chiều rộng khả dụng */
        margin-bottom: 8px; /* Giảm margin bottom input group mobile nhỏ hơn */
    }

    .input-group label {
        margin-bottom: 3px; /* Giảm margin bottom label mobile nhỏ hơn */
        font-size: 0.9rem; /* Giảm font size label mobile nhỏ hơn */
    }

    .input-group input {
        padding: 10px 12px; /* Giảm padding input mobile nhỏ hơn */
        font-size: 0.9rem; /* Giảm font size input mobile nhỏ hơn */
        border-radius: 8px; /* Giảm bo tròn input mobile nhỏ hơn */
    }

    .button-group {
        gap: 10px; /* Giảm gap button group mobile nhỏ hơn */
        margin-top: 10px; /* Giảm margin top button group mobile nhỏ hơn */
    }

    .run-btn, .refresh-btn {
        padding: 10px 20px; /* Giảm padding button mobile nhỏ hơn */
        font-size: 0.9rem; /* Giảm font size button mobile nhỏ hơn */
        border-radius: 8px; /* Giảm bo tròn button mobile nhỏ hơn */
        min-width: auto; /* Min width auto button mobile nhỏ hơn */
        width: 100%; /* Button full width mobile nhỏ hơn */
    }

    .results-container {
        gap: 15px; /* Giảm gap results container mobile nhỏ hơn */
        margin-bottom: 20px; /* Giảm margin bottom results container mobile nhỏ hơn */
    }

    .section-title {
        font-size: 1.2rem; /* Giảm font size section title mobile nhỏ hơn */
        margin-bottom: 6px; /* Giảm margin bottom section title mobile nhỏ hơn */
    }

    .life-path-value {
        font-size: 3rem; /* Giảm font size life path value mobile nhỏ hơn */
    }

    .result-value {
        font-size: 1.8rem; /* Giảm font size result value mobile nhỏ hơn */
    }

    .minor-section {
        gap: 10px; /* Giảm gap minor section mobile nhỏ hơn */
    }

    .minor-card {
        padding: 12px; /* Giảm padding minor card mobile nhỏ hơn */
        border-radius: 8px; /* Giảm bo tròn minor card mobile nhỏ hơn */
    }

    .minor-title {
        font-size: 0.8rem; /* Giảm font size minor title mobile nhỏ hơn */
        margin-bottom: 3px; /* Giảm margin bottom minor title mobile nhỏ hơn */
    }

    .minor-value {
        font-size: 1.8rem; /* Giảm font size minor value mobile nhỏ hơn */
    }

    .footer {
        margin-top: 20px; /* Giảm margin top footer mobile nhỏ hơn */
        padding-bottom: 15px; /* Giảm padding bottom footer mobile nhỏ hơn */
        font-size: 0.7rem; /* Giảm font size footer mobile nhỏ hơn */
        padding-top: 10px; /* Giảm padding top footer mobile nhỏ hơn */
    }
}